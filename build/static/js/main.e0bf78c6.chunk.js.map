{"version":3,"sources":["img/bg-shape.svg","img/sun-icon.svg","img/snow-icon.svg","img/pic-1.jpg","img/pic-2.jpg","components/info/Info.js","components/Country/Country.js","App.js","index.js"],"names":["module","exports","Info","props","src","bg","alt","id","className","tempSymbol","onClick","setTempSymbol","Country","currentTemp","cities","fahrenheit","parseInt","main","temp","celsius","name","sun","snow","weather","toUpperCase","ca","ru","App","useState","setCities","useEffect","a","fetch","response","json","data","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,oPCoC5BC,G,MAhCF,SAACC,GACV,OACI,iCACI,yBAAKC,IAAKC,IAAIC,IAAI,mBAAmBC,GAAG,OACxC,sCAAW,6BAAX,KAAmB,sCACnB,6BACA,mFAAwD,6BAAxD,yCACA,yBAAKC,UAAU,UACX,oEACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,OACY,MAArBL,EAAMM,WACR,4BAAQD,UAAU,WAAlB,KAEA,4BAAQE,QAASP,EAAMQ,eAAvB,KAEA,uCAEJ,yBAAKH,UAAU,OACY,MAArBL,EAAMM,WACR,4BAAQD,UAAU,WAAlB,KAEA,4BAAQE,QAASP,EAAMQ,eAAvB,KAEA,+C,yEC6BTC,EAjDC,SAACT,GAEb,IAAIU,EAAc,EAElB,GAAIV,EAAMW,OAAQ,CACd,IAAIC,EAAaC,SAASb,EAAMW,OAAOG,KAAKC,MACxCC,EAAUH,SAA8B,EAAI,GAAxBD,EAAa,KAEjCF,EADqB,MAArBV,EAAMM,WACQM,EAEAI,EAItB,OACI,iCACI,yBAAKX,UAAU,WACX,yBAAKA,UAAU,aACbL,EAAMW,QAAgC,gBAAtBX,EAAMW,OAAOM,KAC3B,yBAAKhB,IAAKiB,IAAKf,IAAI,QAEnB,yBAAKF,IAAKkB,IAAMhB,IAAI,SAEpB,uBAAGC,GAAG,QAAQJ,EAAMW,OAASD,EAAc,GAA3C,SAEJ,2BAAIV,EAAMW,OAASX,EAAMW,OAAOS,QAAQ,GAAGN,KAAKO,cAAgB,KAElErB,EAAMW,QAAgC,gBAAtBX,EAAMW,OAAOM,KAC/B,yBAAKhB,IAAKqB,IAAInB,IAAI,cAAcC,GAAG,gBAEnC,yBAAKH,IAAKsB,IAAIpB,IAAI,SAASC,GAAG,gBAE9B,yBAAKC,UAAU,WACTL,EAAMW,QAAgC,gBAAtBX,EAAMW,OAAOM,KAC/B,6BACI,0CACA,0CAGJ,6BACI,qCACA,yCCpBLO,EArBH,WAAO,IAAD,EACkBC,mBAAS,KAD3B,mBACXnB,EADW,KACCE,EADD,OAEYiB,mBAAS,IAFrB,mBAETd,EAFS,KAEDe,EAFC,KAYhB,OARAC,qBAAU,YACR,uCAAC,8BAAAC,EAAA,sEACwBC,MAAM,wHAD9B,cACOC,EADP,gBAEoBA,EAASC,OAF7B,OAEOC,EAFP,OAGCN,EAAUM,EAAKC,MAHhB,2CAAD,yDAKC,IAGD,8BACE,kBAAC,EAAD,CAAM3B,WAAYA,EAAYE,cAAe,kBAAMA,EAA6B,MAAfF,EAAqB,IAAM,QAC5F,kBAAC,EAAD,CAASK,OAAQA,EAAO,GAAIL,WAAYA,IACxC,kBAAC,EAAD,CAASK,OAAQA,EAAO,GAAIL,WAAYA,MCnB9C4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e0bf78c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-shape.9b44a343.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun-icon.ee97e668.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow-icon.916aea4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pic-1.412dea68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic-2.236ccd82.jpg\";","import React from 'react';\r\nimport bg from '../../img/bg-shape.svg';\r\nimport './Info.css';\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <section>\r\n            <img src={bg} alt='Background Shape' id='bg' />\r\n            <h1>WEATHER<br />ME<span>NOW</span></h1>\r\n            <hr />\r\n            <p>A minimal weather app design to brighten up your day.<br />Designed and developed by Jozsef Sido</p>\r\n            <div className='bottom'>\r\n                <p>Your weather is currently showing in:</p>\r\n                <div className='buttons'>\r\n                    <div className='btn'>\r\n                        { props.tempSymbol === 'C' ?\r\n                        <button className='clicked'>C</button>\r\n                        :\r\n                        <button onClick={props.setTempSymbol}>C</button>\r\n                        }\r\n                        <p>Celsius</p>\r\n                    </div>\r\n                    <div className='btn'>\r\n                        { props.tempSymbol === 'F'  ?\r\n                        <button className='clicked'>F</button>\r\n                        :\r\n                        <button onClick={props.setTempSymbol}>F</button>\r\n                        }\r\n                        <p>Fahrenheit</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport './Country.css';\r\n\r\nimport sun from '../../img/sun-icon.svg';\r\nimport snow from '../../img/snow-icon.svg';\r\nimport ca from '../../img/pic-1.jpg'\r\nimport ru from '../../img/pic-2.jpg'\r\n\r\nconst Country = (props) => {\r\n\r\n    let currentTemp = 0;\r\n\r\n    if (props.cities) {\r\n        let fahrenheit = parseInt(props.cities.main.temp);\r\n        let celsius = parseInt((fahrenheit - 32) * (5 / 9));\r\n        if (props.tempSymbol === 'F') {\r\n            currentTemp = fahrenheit;\r\n        } else {\r\n            currentTemp = celsius;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className='floater'>\r\n                <div className='icon-temp'>\r\n                { props.cities && props.cities.name === 'Los Angeles' ?\r\n                    <img src={sun} alt='Sun'/>\r\n                    :\r\n                    <img src={snow} alt='Snow'/>\r\n                }\r\n                    <p id='temp'>{props.cities ? currentTemp : ''}Â°</p>\r\n                </div>\r\n                <p>{props.cities ? props.cities.weather[0].main.toUpperCase() : ''}</p>\r\n            </div>\r\n            { props.cities && props.cities.name === 'Los Angeles' ?\r\n            <img src={ca} alt='Los Angeles' id='country-img' />\r\n            :\r\n            <img src={ru} alt='Moscow' id='country-img' />\r\n            }\r\n            <div className='country'>\r\n                { props.cities && props.cities.name === 'Los Angeles' ?\r\n                <div>\r\n                    <p>Los Angeles</p>\r\n                    <p>California</p>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <p>Moscow</p>\r\n                    <p>Russia</p>\r\n                </div>\r\n                }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Country;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Info from './components/info/Info';\nimport Country from './components/Country/Country';\n\n// weather api: 40af4c7a896866ecce136a32e66d7f74\n// http://api.openweathermap.org/data/2.5/group?id=5368361,524901&units=imperial&appid=40af4c7a896866ecce136a32e66d7f74\n\nconst App = () => {\n  let [tempSymbol, setTempSymbol] = useState('C');\n  const [cities, setCities] = useState([]);\n\n  useEffect(() => {\n    (async function fetchData() {\n      const response = await fetch('http://api.openweathermap.org/data/2.5/group?id=5368361,524901&units=imperial&appid=40af4c7a896866ecce136a32e66d7f74');\n      const data = await response.json();\n      setCities(data.list);\n    })();\n  }, []);\n\n  return (\n    <main>\n      <Info tempSymbol={tempSymbol} setTempSymbol={() => setTempSymbol(tempSymbol === 'C' ? 'F' : 'C')}/>\n      <Country cities={cities[0]} tempSymbol={tempSymbol}/>\n      <Country cities={cities[1]} tempSymbol={tempSymbol}/>\n    </main>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}